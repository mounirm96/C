





0   <(R)< 32   => 00000000 | octet
32  <(R)< 64   => 00100000 | octet 
64  <(R)< 96   => 01000000 | octet
96  <(R)< 128  => 01100000 | octet
128 <(R)< 160  => 10000000 | octet
160 <(R)< 192  => 10100000 | octet
192 <(R)< 224  => 11000000 | octet
224 <(R)< 256  => 11100000 | octet




0   <(G)< 32   => 00000000 | octet
32  <(G)< 64   => 00000100 | octet 
64  <(G)< 96   => 00001000 | octet
96  <(G)< 128  => 00001100 | octet
128 <(G)< 160  => 00010000 | octet
160 <(G)< 192  => 00010100 | octet
192 <(G)< 224  => 00011000 | octet
224 <(G)< 256  => 00011100 | octet



0   < (B)< 64    = 00000000 | octet
64  < (B)< 128   = 00000001 | octet
128 < (B)< 192   = 00000010 | octet
192 < (B)< 255   = 00000011 | octet




0   <g-min.g<32   = r<<000
32  <g-min.g<64   = r<<001
64  <g-min.g<96   = r<<010
96  <g-min.g<128  = r<<011
128 <g-min.g<160  = r<<100
160 <g-min.g<192  = r<<101
192 <g-min.g<224  = r<<110
224 <g-min.g<256  = r<<111







0   <b-min.b<64    = rg<<00
64  <b-min.b<128   = rg<<01
128 <b-min.b<192   = rg<<10
192 <b-min.b<255   = rg<<11





				if (c<tabg[0]){
					val = 16;}
				  
				if (c>=tabg[0] && c<tabg[1]){
				    val = 48;}
				   
				if (c>=tabg[1] && c<tabg[2]){
				    val = 80;}
				       
				if (c>=tabg[2] && c<tabg[3]){
				    val = 112;}
				  
				if (c>=tabg[3] && c<tabg[4]){
				    val = 144;}
				   
				if (c>=tabg[4] && c<tabg[5]){
				    val = 176;}
				   
				if (c>=tabg[5] && c<tabg[6]){
				    val = 208;}
			 
				if (c>=tabg[6] && c<tabg[7]){
				    val = 230;}
				                       
			
				
 
